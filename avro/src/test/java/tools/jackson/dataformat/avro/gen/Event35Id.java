/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tools.jackson.dataformat.avro.gen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Event35Id extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventID\",\"namespace\":\"com.demonstration\",\"fields\":[{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"first\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"second\",\"type\":[\"null\",\"int\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String description;
   private java.lang.Integer first;
   private java.lang.Integer second;

  /**
   * Default constructor.
   */
  public Event35Id() {}

  /**
   * All-args constructor.
   */
  public Event35Id(java.lang.String description, java.lang.Integer first, java.lang.Integer second) {
    this.description = description;
    this.first = first;
    this.second = second;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return description;
    case 1: return first;
    case 2: return second;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: description = (java.lang.String)value$; break;
    case 1: first = (java.lang.Integer)value$; break;
    case 2: second = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'first' field.
   */
  public java.lang.Integer getFirst() {
    return first;
  }

  /**
   * Sets the value of the 'first' field.
   * @param value the value to set.
   */
  public void setFirst(java.lang.Integer value) {
    this.first = value;
  }

  /**
   * Gets the value of the 'second' field.
   */
  public java.lang.Integer getSecond() {
    return second;
  }

  /**
   * Sets the value of the 'second' field.
   * @param value the value to set.
   */
  public void setSecond(java.lang.Integer value) {
    this.second = value;
  }

  /** Creates a new EventID RecordBuilder */
  public static Event35Id.Builder newBuilder() {
    return new Event35Id.Builder();
  }
  
  /** Creates a new EventID RecordBuilder by copying an existing Builder */
  public static Event35Id.Builder newBuilder(Event35Id.Builder other) {
    return new Event35Id.Builder(other);
  }
  
  /** Creates a new EventID RecordBuilder by copying an existing EventID instance */
  public static Event35Id.Builder newBuilder(Event35Id other) {
    return new Event35Id.Builder(other);
  }
  
  /**
   * RecordBuilder for EventID instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event35Id>
    implements org.apache.avro.data.RecordBuilder<Event35Id> {

    private java.lang.String description;
    private java.lang.Integer first;
    private java.lang.Integer second;

    /** Creates a new Builder */
    private Builder() {
      super(Event35Id.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Event35Id.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing EventID instance */
    private Builder(Event35Id other) {
            super(Event35Id.SCHEMA$);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.first)) {
        this.first = data().deepCopy(fields()[1].schema(), other.first);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.second)) {
        this.second = data().deepCopy(fields()[2].schema(), other.second);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'description' field */
    public java.lang.String getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public Event35Id.Builder setDescription(java.lang.String value) {
      validate(fields()[0], value);
      this.description = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'description' field */
    public Event35Id.Builder clearDescription() {
      description = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'first' field */
    public java.lang.Integer getFirst() {
      return first;
    }
    
    /** Sets the value of the 'first' field */
    public Event35Id.Builder setFirst(java.lang.Integer value) {
      validate(fields()[1], value);
      this.first = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'first' field has been set */
    public boolean hasFirst() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'first' field */
    public Event35Id.Builder clearFirst() {
      first = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'second' field */
    public java.lang.Integer getSecond() {
      return second;
    }
    
    /** Sets the value of the 'second' field */
    public Event35Id.Builder setSecond(java.lang.Integer value) {
      validate(fields()[2], value);
      this.second = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'second' field has been set */
    public boolean hasSecond() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'second' field */
    public Event35Id.Builder clearSecond() {
      second = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Event35Id build() {
      try {
        Event35Id record = new Event35Id();
        record.description = fieldSetFlags()[0] ? this.description : (java.lang.String) defaultValue(fields()[0]);
        record.first = fieldSetFlags()[1] ? this.first : (java.lang.Integer) defaultValue(fields()[1]);
        record.second = fieldSetFlags()[2] ? this.second : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
